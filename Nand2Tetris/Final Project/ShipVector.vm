function ShipVector.new 0
push constant 3
call Memory.alloc 1
pop pointer 0
push constant 0
pop this 1
push constant 4
pop this 0
push this 0
call Array.new 1
pop this 2
push pointer 0
return
function ShipVector.dispose 0
push argument 0
pop pointer 0
push this 2
call Array.dispose 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function ShipVector.size 0
push argument 0
pop pointer 0
push this 1
return
function ShipVector.isEmpty 0
push argument 0
pop pointer 0
push this 1
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
return
label IF_FALSE0
push constant 0
return
function ShipVector.clear 0
push argument 0
pop pointer 0
push this 2
call Array.dispose 1
pop temp 0
push constant 0
pop this 1
push constant 4
pop this 0
push this 0
call Array.new 1
pop this 2
push constant 0
return
function ShipVector.grow 2
push argument 0
pop pointer 0
push this 0
push constant 2
call Math.multiply 2
pop this 0
push this 0
call Array.new 1
pop local 0
push constant 0
pop local 1
label WHILE_EXP0
push local 1
push this 1
lt
not
if-goto WHILE_END0
push local 1
push local 0
add
push local 1
push this 2
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push this 2
call Array.dispose 1
pop temp 0
push local 0
pop this 2
push constant 0
return
function ShipVector.append 0
push argument 0
pop pointer 0
push this 0
push this 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
call ShipVector.grow 1
pop temp 0
label IF_FALSE0
push this 1
push this 2
add
push argument 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push this 1
push constant 1
add
pop this 1
push constant 0
return
function ShipVector.get 2
push argument 0
pop pointer 0
push argument 1
push constant 0
lt
push argument 1
push this 1
push constant 1
sub
gt
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 19
call String.new 1
push constant 69
call String.appendChar 2
push constant 82
call String.appendChar 2
push constant 82
call String.appendChar 2
push constant 79
call String.appendChar 2
push constant 82
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 73
call String.appendChar 2
push constant 78
call String.appendChar 2
push constant 86
call String.appendChar 2
push constant 65
call String.appendChar 2
push constant 76
call String.appendChar 2
push constant 73
call String.appendChar 2
push constant 68
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 73
call String.appendChar 2
push constant 78
call String.appendChar 2
push constant 68
call String.appendChar 2
push constant 69
call String.appendChar 2
push constant 88
call String.appendChar 2
pop local 1
call Output.println 0
pop temp 0
push local 1
call Output.printString 1
pop temp 0
call Output.println 0
pop temp 0
push local 1
call String.dispose 1
pop temp 0
push constant 0
return
label IF_FALSE0
push argument 1
push this 2
add
pop pointer 1
push that 0
pop local 0
push local 0
return
function ShipVector.validate 0
push argument 0
pop pointer 0
push pointer 0
call ShipVector.validateShips 1
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push pointer 0
call ShipVector.validateArrangement 1
not
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
return
label IF_FALSE1
push constant 0
not
return
function ShipVector.validateArrangement 10
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 1
lt
not
if-goto WHILE_END0
push pointer 0
push local 0
call ShipVector.get 2
pop local 8
push local 0
push constant 1
add
pop local 1
label WHILE_EXP1
push local 1
push this 1
lt
not
if-goto WHILE_END1
push pointer 0
push local 1
call ShipVector.get 2
pop local 9
push constant 0
pop local 2
label WHILE_EXP2
push local 2
push local 8
call Ship.getLength 1
lt
not
if-goto WHILE_END2
push local 8
call Ship.getStartX 1
push local 8
call Ship.getDirection 1
push constant 2
call Utils.mod 2
push local 2
call Math.multiply 2
add
pop local 4
push local 8
call Ship.getStartY 1
push local 8
call Ship.getDirection 1
push constant 1
sub
push constant 0
call Math.max 2
push local 2
call Math.multiply 2
add
pop local 6
push constant 0
pop local 3
label WHILE_EXP3
push local 3
push local 9
call Ship.getLength 1
lt
not
if-goto WHILE_END3
push local 9
call Ship.getStartX 1
push local 9
call Ship.getDirection 1
push constant 2
call Utils.mod 2
push local 3
call Math.multiply 2
add
pop local 5
push local 9
call Ship.getStartY 1
push local 9
call Ship.getDirection 1
push constant 1
sub
push constant 0
call Math.max 2
push local 3
call Math.multiply 2
add
pop local 7
push local 4
push local 5
sub
call Utils.abs 1
push constant 1
gt
not
push local 6
push local 7
sub
call Utils.abs 1
push constant 1
gt
not
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push local 3
push constant 1
add
pop local 3
goto WHILE_EXP3
label WHILE_END3
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP2
label WHILE_END2
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
not
return
function ShipVector.validateShips 5
push argument 0
pop pointer 0
push this 1
push constant 7
eq
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push constant 6
call Array.new 1
pop local 4
push constant 1
push local 4
add
push constant 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push local 4
add
push constant 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 3
push local 4
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 4
push local 4
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 5
push local 4
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 1
lt
not
if-goto WHILE_END0
push local 0
push this 2
add
pop pointer 1
push that 0
pop local 3
push local 3
call Ship.getLength 1
pop local 1
push local 1
push local 4
add
pop pointer 1
push that 0
pop local 2
push local 1
push local 4
add
push local 2
push constant 1
sub
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 1
pop local 0
label WHILE_EXP1
push local 0
push constant 6
lt
not
if-goto WHILE_END1
push local 0
push local 4
add
pop pointer 1
push that 0
push constant 0
eq
not
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
return
label IF_FALSE1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP1
label WHILE_END1
push constant 0
not
return
function ShipVector.print 2
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 1
lt
not
if-goto WHILE_END0
push local 0
push this 2
add
pop pointer 1
push that 0
pop local 1
push local 1
call Ship.print 1
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
