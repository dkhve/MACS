// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux4Way16.hdl

/**
 * 4-way 16-bit multiplexor:
 * out = a if sel == 00
 *       b if sel == 01
 *       c if sel == 10
 *       d if sel == 11
 */

CHIP Mux4Way16 {
    IN a[16], b[16], c[16], d[16], sel[2];
    OUT out[16];

    PARTS:
    //let's distinguish variants by second(from left) bit of sel
    Mux16(a=a, b=b, sel=sel[0], out=muxAB);
    Mux16(a=c, b=d, sel=sel[0], out=muxCD);

    //if second bit of sel is 0 then we will have muxAB=a and muxCD=c left
    //if second bit of sel is 1 then we will have muxAB=b and muxCD=d left
    //now we should distinguish them by first bit 
    Mux16(a=muxAB, b=muxCD, sel=sel[1], out=out);

    //at first I tried to distinguish by first bit. 
    //I had muxAD and muxBC, but it didn't work, because when first bit was 1
    //I had left muxAD = d and muxBC = c
    //that is bad because sel[1] = 0 goes to d instead of c
    
}